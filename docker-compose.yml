version: '3.8'

services:
  # Restaurant Service - Instance 1
  restaurant-service-1:
    build:
      context: .
      dockerfile: restaurant-service/Dockerfile
    image: restaurant-system/restaurant-service:latest
    container_name: restaurant-service-1
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8081
      - SPRING_APPLICATION_NAME=restaurant-service
      - SPRING_DATASOURCE_URL=jdbc:h2:mem:restaurant_db_1;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
      - SPRING_DATASOURCE_USERNAME=restaurant
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - SPRING_LIQUIBASE_CHANGE_LOG=classpath:db/changelog/db.changelog-master.xml
      - SPRING_H2_CONSOLE_ENABLED=true
      - LOGGING_LEVEL_ROOT=INFO
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics,liquibase
    networks:
      - restaurant-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/actuator/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Restaurant Service - Instance 2 (for load balancing)
  restaurant-service-2:
    build:
      context: .
      dockerfile: restaurant-service/Dockerfile
    image: restaurant-system/restaurant-service:latest
    container_name: restaurant-service-2
    ports:
      - "8082:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8081
      - SPRING_APPLICATION_NAME=restaurant-service
      - SPRING_DATASOURCE_URL=jdbc:h2:mem:restaurant_db_2;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
      - SPRING_DATASOURCE_USERNAME=restaurant
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - SPRING_LIQUIBASE_CHANGE_LOG=classpath:db/changelog/db.changelog-master.xml
      - SPRING_H2_CONSOLE_ENABLED=true
      - LOGGING_LEVEL_ROOT=INFO
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics,liquibase
    networks:
      - restaurant-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/actuator/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Reservation Service - Instance 1
  reservation-service-1:
    build:
      context: .
      dockerfile: reservation-service/Dockerfile
    image: restaurant-system/reservation-service:latest
    container_name: reservation-service-1
    ports:
      - "8083:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8082
      - SPRING_APPLICATION_NAME=reservation-service
      - SPRING_DATASOURCE_URL=jdbc:h2:mem:reservation_db_1;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
      - SPRING_DATASOURCE_USERNAME=reservation
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - SPRING_LIQUIBASE_CHANGE_LOG=classpath:db/changelog/db.changelog-master.xml
      - SPRING_H2_CONSOLE_ENABLED=true
      - RESTAURANT_SERVICE_URL=http://restaurant-service-1:8081
      - LOGGING_LEVEL_ROOT=INFO
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics,liquibase
    networks:
      - restaurant-network
    restart: unless-stopped
    depends_on:
      - restaurant-service-1
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8082/actuator/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Reservation Service - Instance 2 (for load balancing)
  reservation-service-2:
    build:
      context: .
      dockerfile: reservation-service/Dockerfile
    image: restaurant-system/reservation-service:latest
    container_name: reservation-service-2
    ports:
      - "8084:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8082
      - SPRING_APPLICATION_NAME=reservation-service
      - SPRING_DATASOURCE_URL=jdbc:h2:mem:reservation_db_2;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
      - SPRING_DATASOURCE_USERNAME=reservation
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - SPRING_LIQUIBASE_CHANGE_LOG=classpath:db/changelog/db.changelog-master.xml
      - SPRING_H2_CONSOLE_ENABLED=true
      - RESTAURANT_SERVICE_URL=http://restaurant-service-2:8081
      - LOGGING_LEVEL_ROOT=INFO
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics,liquibase
    networks:
      - restaurant-network
    restart: unless-stopped
    depends_on:
      - restaurant-service-2
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8082/actuator/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    image: restaurant-system/api-gateway:latest
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8080
      - SPRING_APPLICATION_NAME=api-gateway
      - SERVICES_RESTAURANT_URL=http://restaurant-service-1:8081
      - SERVICES_RESERVATION_URL=http://reservation-service-1:8082
      - JWT_SECRET=mySecretKey2024RestaurantReservationSystemDocker
      - JWT_EXPIRATION=86400
      - LOGGING_LEVEL_ROOT=INFO
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics,gateway
    networks:
      - restaurant-network
    restart: unless-stopped
    depends_on:
      - restaurant-service-1
      - restaurant-service-2
      - reservation-service-1
      - reservation-service-2
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Load Balancer (nginx)
  load-balancer:
    image: nginx:alpine
    container_name: restaurant-load-balancer
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api-gateway
      - restaurant-service-1
      - restaurant-service-2
      - reservation-service-1
      - reservation-service-2
    networks:
      - restaurant-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health", "||", "exit", "1"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Monitoring - Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: restaurant-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - restaurant-network
    restart: unless-stopped

  # Monitoring - Grafana (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: restaurant-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - restaurant-network
    restart: unless-stopped

volumes:
  grafana-data:

networks:
  restaurant-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16