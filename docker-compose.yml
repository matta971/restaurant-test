services:
  # Restaurant Service - Instance 1
  restaurant-service-1:
    build:
      context: .
      dockerfile: restaurant-service/Dockerfile
    image: restaurant-system/restaurant-service:latest
    container_name: restaurant-service-1
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8080
      - SPRING_APPLICATION_NAME=restaurant-service
      - SPRING_DATASOURCE_URL=jdbc:h2:mem:restaurant_db_1;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;DEFAULT_NULL_ORDERING=HIGH
      - SPRING_DATASOURCE_USERNAME=restaurant
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.h2.Driver
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.H2Dialect
      - SPRING_LIQUIBASE_CHANGE_LOG=classpath:db/changelog/db.changelog-master.xml
      - SPRING_LIQUIBASE_CONTEXTS=dev
      - SPRING_H2_CONSOLE_ENABLED=true
      - LOGGING_LEVEL_ROOT=INFO
      - LOGGING_LEVEL_COM_RESTAURANT=DEBUG
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics,liquibase
    networks:
      - restaurant-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Restaurant Service - Instance 2
  restaurant-service-2:
    build:
      context: .
      dockerfile: restaurant-service/Dockerfile
    image: restaurant-system/restaurant-service:latest
    container_name: restaurant-service-2
    ports:
      - "8082:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8080
      - SPRING_APPLICATION_NAME=restaurant-service
      - SPRING_DATASOURCE_URL=jdbc:h2:mem:restaurant_db_2;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;DEFAULT_NULL_ORDERING=HIGH
      - SPRING_DATASOURCE_USERNAME=restaurant
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.h2.Driver
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.H2Dialect
      - SPRING_LIQUIBASE_CHANGE_LOG=classpath:db/changelog/db.changelog-master.xml
      - SPRING_LIQUIBASE_CONTEXTS=dev
      - SPRING_H2_CONSOLE_ENABLED=true
      - LOGGING_LEVEL_ROOT=INFO
      - LOGGING_LEVEL_COM_RESTAURANT=DEBUG
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics,liquibase
    networks:
      - restaurant-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Load Balancer (nginx) - Simplified for Restaurant Service only
  load-balancer:
    image: nginx:alpine
    container_name: restaurant-load-balancer
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - restaurant-service-1
      - restaurant-service-2
    networks:
      - restaurant-network
    restart: unless-stopped

  # H2 Console for development
  h2-console:
    image: oscarfonts/h2:latest
    container_name: restaurant-h2-console
    ports:
      - "8085:1521"
      - "8086:81"
    environment:
      - H2_OPTIONS=-web -webAllowOthers -tcp -tcpAllowOthers -browser
    networks:
      - restaurant-network

networks:
  restaurant-network:
    driver: bridge